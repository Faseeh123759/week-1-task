# -*- coding: utf-8 -*-
"""week 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/103YQLHb5LB9XD2t-o6sMBgvz2ZIFa3No
"""

#Task1
import pandas as pd
name = input("Enter your name: ")
age = input("Enter your age: ")
email = input("Enter your email: ")
favorite_number = input("Enter your favorite number: ")
def validate_email(email):
    return pd.Series([email]).str.contains(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$').iloc[0]
while not validate_email(email):
    print("Invalid email format. Please try again.")
    email = input("Enter your email: ")
user_info = {
    "name": name,
    "age": age,
    "email": email,
    "favorite_number": favorite_number
}
print(f"Hello {user_info['name']}, you are {user_info['age']} years old, your email is {user_info['email']}, and your favorite number is {user_info['favorite_number']}.")

"""Task 2"""

def is_even(number):
    if number % 2 == 0:
        print(f"The number {number} is even.")
        return True
    else:
        print(f"The number {number} is odd.")
        return False
number = int(input("Enter an integer: "))
result = is_even(number)

"""Task 3"""

def convert_temperature(temp, scale):
    if scale == "C":
        converted_temp = (temp * 9/5) + 32
        print(f"{temp}째C is equal to {converted_temp:.2f}째F")
    elif scale == "F":
        converted_temp = (temp - 32) * 5/9
        print(f"{temp}째F is equal to {converted_temp:.2f}째C")
    else:
        print("Invalid scale. Please use 'C' for Celsius or 'F' for Fahrenheit.")
        return None
    return converted_temp
temperature = float(input("Enter the temperature value: "))
scale = input("Enter the scale (C for Celsius, F for Fahrenheit): ")
converted = convert_temperature(temperature, scale)

"""Task 4"""

def find_max_min(numbers_list):
    max_num = max(numbers_list)
    min_num = min(numbers_list)
    return max_num, min_num
numbers_list = []
for i in range(5):
    number = float(input(f"Enter number {i+1}: "))
    numbers_list.append(number)
max_num, min_num = find_max_min(numbers_list)
print(f"The maximum number is: {max_num}")
print(f"The minimum number is: {min_num}")

"""Task 5"""

students = []
for i in range(3):
    name = input(f"Enter the name of student {i+1}: ")
    age = input(f"Enter the age of student {i+1}: ")
    grade = input(f"Enter the grade of student {i+1}: ")
    students.append((name, age, grade))
students_dict = {student[0]: (student[1], student[2]) for student in students}
for name, details in students_dict.items():
    age, grade = details
    print(f"Student Name: {name}, Age: {age}, Grade: {grade}")

"""Task 6"""

def update_inventory(inventory_dict, item, quantity):
    if item in inventory_dict:
        inventory_dict[item] += quantity
        if inventory_dict[item] < 0:
            inventory_dict[item] = 0
    else:
        inventory_dict[item] = max(quantity, 0)
    return inventory_dict
inventory = {
    "apples": 10,
    "bananas": 20,
    "oranges": 15,
    "pears": 5,
    "grapes": 8}
for i in range(3):
    item = input(f"Enter the name of item {i+1} to update: ")
    quantity = int(input(f"Enter the quantity to add/remove for {item} (use negative values to remove): "))
    inventory = update_inventory(inventory, item, quantity)
print("Updated inventory:")
for item, quantity in inventory.items():
    print(f"{item}: {quantity}")

