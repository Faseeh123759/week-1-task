# -*- coding: utf-8 -*-
"""LMS.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MmlED4KWtcq_9kxz8Api8jeTpGb5YE2o
"""

class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages

    def get_title(self):
        return self.title

    def get_author(self):
        return self.author

    def get_pages(self):
        return self.pages

    def set_title(self, title):
        self.title = title

    def set_author(self, author):
        self.author = author

    def set_pages(self, pages):
        self.pages = pages

    @classmethod
    def calculate_reading_time(cls, pages):
        words_per_page = 300  # Assuming an average of 300 words per page
        words_total = pages * words_per_page
        reading_speed = 250  # Words per minute
        reading_time_minutes = words_total / reading_speed
        return reading_time_minutes

    def __str__(self):
        return f"Title: {self.title}, Author: {self.author}, Pages: {self.pages}"


class Ebook(Book):
    def __init__(self, title, author, pages, format):
        super().__init__(title, author, pages)
        self.format = format

    def __str__(self):
        book_info = super().__str__()
        return f"{book_info}, Format: {self.format}"


# Demonstration
if __name__ == "__main__":

    my_book = Book("Python Programming", "DR Abrar", 350)
    print(my_book)

    # Demonstrate getter and setter methods
    print(my_book.get_title())
    my_book.set_author("DR Atta")
    print(my_book.get_author())

    # Calculate reading time
    print(Book.calculate_reading_time(350))

    # Create an instance of Ebook
    my_ebook = Ebook("Java Programming", "Prof Aslam", 500, "PDF")
    print(my_ebook)